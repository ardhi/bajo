{"list":[{"title":"App","link":"<a href=\"App.html\">App</a>","description":"<p>Class constructor</p>"},{"title":"App#addPlugin","link":"<a href=\"App.html#addPlugin\">addPlugin</a>","description":"<p>Add a plugin to the app</p>"},{"title":"App#boot","link":"<a href=\"App.html#boot\">boot</a>","description":"<p>Booting the app</p>"},{"title":"App#dump","link":"<a href=\"App.html#dump\">dump</a>","description":"<p>Dumping variable on screen</p>"},{"title":"App#getPluginNames","link":"<a href=\"App.html#getPluginNames\">getPluginNames</a>","description":"<p>Get all loaded plugin names</p>"},{"title":"Bajo","link":"<a href=\"Bajo.html\">Bajo</a>"},{"title":"Bajo#applets","link":"<a href=\"Bajo.html#applets\">applets</a>","description":"<p>Storage for applets</p>"},{"title":"Bajo#breakNsPath","link":"<a href=\"Bajo.html#breakNsPath\">breakNsPath</a>","description":"<p>Break name to its namespace &amp; path infos</p>"},{"title":"Bajo#buildCollections","link":"<a href=\"Bajo.html#buildCollections\">buildCollections</a>","description":"<p>Method to transform an array or object from config into an array of collection safely.</p>\n<p>Emitted hooks:</p>\n<ol>\n<li><code>{ns}:beforeBuildCollection (container)</code> - called before collection is built</li>\n<li><code>{ns}:afterBuildCollection (container, items)</code> - called after collection is built</li>\n</ol>"},{"title":"Bajo#callHandler","link":"<a href=\"Bajo.html#callHandler\">callHandler</a>","description":"<p>Calling any plugin's method by its name. Name format: <code>ns:methodName</code>.</p>\n<ul>\n<li>If name is a string, the corresponding plugin's method will be called with passed args as its parameters</li>\n<li>If name is a plugin instance, this will be used as the scope instead. The first args is now the handler name and the rest are its parameters</li>\n<li>If name is a function, this function will be run under scope with the remaining args</li>\n<li>If name is an object and has <code>handler</code> key in it, this function handler will be instead</li>\n</ul>"},{"title":"Bajo#config","link":"<a href=\"Bajo.html#config\">config</a>","description":"<p>Config object. See {@tutorial config} for details</p>"},{"title":"Bajo#configHandlers","link":"<a href=\"Bajo.html#configHandlers\">configHandlers</a>","description":"<p>Storage for config handlers. By default there are only two handlers available: <code>.js</code>\nand <code>.json</code>.</p>\n<p>Use plugin to add more type - e.g: {@link https://github.com/ardhi/bajo-config|bajo-config}\nlets you to use <code>.yaml</code> and <code>.toml</code></p>"},{"title":"Bajo#eachPlugins","link":"<a href=\"Bajo.html#eachPlugins\">eachPlugins</a>","description":"<p>This function iterates through all loaded plugins and call the provided handler scoped as the running plugin.\nAnd an object with the following key serves as its parameter:</p>\n<ul>\n<li><code>file</code>: file matched the glob pattern</li>\n<li><code>dir</code>: plugin's base directory</li>\n</ul>"},{"title":"Bajo#findDeep","link":"<a href=\"Bajo.html#findDeep\">findDeep</a>","description":"<p>Find item deep in paths</p>"},{"title":"Bajo#format","link":"<a href=\"Bajo.html#format\">format</a>","description":"<p>Format value</p>"},{"title":"Bajo#formatByType","link":"<a href=\"Bajo.html#formatByType\">formatByType</a>","description":"<p>Format value by type</p>"},{"title":"Bajo#freeze","link":"<a href=\"Bajo.html#freeze\">freeze</a>","description":"<p>Freeze object</p>"},{"title":"Bajo#generateId","link":"<a href=\"Bajo.html#generateId\">generateId</a>","description":"<p>Generate unique random characters that can be used as ID. Use {@link https://github.com/ai/nanoid|nanoid} under the hood</p>"},{"title":"Bajo#getGlobalModuleDir","link":"<a href=\"Bajo.html#getGlobalModuleDir\">getGlobalModuleDir</a>","description":"<p>Get NPM global module directory</p>"},{"title":"Bajo#getMethod","link":"<a href=\"Bajo.html#getMethod\">getMethod</a>","description":"<p>Get class method by name</p>"},{"title":"Bajo#getModuleDir","link":"<a href=\"Bajo.html#getModuleDir\">getModuleDir</a>","description":"<p>Get module directory, locally and globally</p>"},{"title":"Bajo#getPlugin","link":"<a href=\"Bajo.html#getPlugin\">getPlugin</a>","description":"<p>Get plugin by name</p>"},{"title":"Bajo#getPluginDataDir","link":"<a href=\"Bajo.html#getPluginDataDir\">getPluginDataDir</a>","description":"<p>Get plugin data directory</p>"},{"title":"Bajo#getPluginFile","link":"<a href=\"Bajo.html#getPluginFile\">getPluginFile</a>","description":"<p>Resolve file path from:</p>\n<ul>\n<li>local/absolute file</li>\n<li>ns based path (<code>myPlugin:/path/to/file.txt</code>)</li>\n</ul>"},{"title":"Bajo#getUnitFormat","link":"<a href=\"Bajo.html#getUnitFormat\">getUnitFormat</a>","description":"<p>Get unit format</p>"},{"title":"Bajo#importModule","link":"<a href=\"Bajo.html#importModule\">importModule</a>","description":"<p>Import file/module from any loaded plugins</p>\n<p>Your plugin structure:</p>\n<pre class=\"prettyprint source\"><code>|- src\n|  |- lib\n|  |  |- my-module.js\n|- index.js\n|- package.json\n</code></pre>\n<p>Inside your app/plugin:</p>\n<pre class=\"prettyprint source lang-javascript\"><code>const { importModule } = this.app.bajo\nconst myModule = await importModule('myPlugin:/src/lib/my-module.js')\n</code></pre>"},{"title":"Bajo#importPkg","link":"<a href=\"Bajo.html#importPkg\">importPkg</a>","description":"<p>Import one or more package belongs to a plugin</p>\n<p>Example: you want to import packages <code>delay</code> and <code>chalk</code> from <code>bajo</code> namespace and use it inside your app/plugin</p>\n<pre class=\"prettyprint source lang-javascript\"><code>const { importPkg } from this.app.bajo\nconst [delay, chalk] = await importPkg('bajo:delay', 'bajo:chalk')\n\nawait delay(1000)\n...\n</code></pre>"},{"title":"Bajo#isEmptyDir","link":"<a href=\"Bajo.html#isEmptyDir\">isEmptyDir</a>","description":"<p>Check whether directory is empty or not. More info please {@link https://github.com/gulpjs/empty-dir|check here}.</p>"},{"title":"Bajo#isLogInRange","link":"<a href=\"Bajo.html#isLogInRange\">isLogInRange</a>","description":"<p>Check whether log level is within log's app current level</p>"},{"title":"Bajo#isValidApp","link":"<a href=\"Bajo.html#isValidApp\">isValidApp</a>","description":"<p>Check whether directory is a valid Bajo app</p>"},{"title":"Bajo#isValidPlugin","link":"<a href=\"Bajo.html#isValidPlugin\">isValidPlugin</a>","description":"<p>Check whether directory is a valid Bajo plugin</p>"},{"title":"Bajo#numUnit","link":"<a href=\"Bajo.html#numUnit\">numUnit</a>","description":"<p>Return its numeric portion of a value</p>"},{"title":"Bajo#parseDt","link":"<a href=\"Bajo.html#parseDt\">parseDt</a>","description":"<p>Parse datetime string as Javascript object. Please visit {@link https://day.js.org|dayjs} for valid formats and more infos</p>"},{"title":"Bajo#parseDur","link":"<a href=\"Bajo.html#parseDur\">parseDur</a>","description":"<p>Parse duration to its millisecond value. Use {@link https://github.com/vercel/ms|ms} under the hood</p>"},{"title":"Bajo#parseObject","link":"<a href=\"Bajo.html#parseObject\">parseObject</a>","description":"<p>Parse an object and optionally normalize its values recursively. Use {@link https://github.com/ladjs/dotenv-parse-variables}\nto parse values, so please have a visit to know how it works</p>\n<p>If <code>options.parseValue</code> is <code>true</code>, any key ends with <code>Dur</code> and <code>Dt</code> will\nalso be parsed as millisecond and Javascript datetime accordingly</p>"},{"title":"Bajo#pluginPkgs","link":"<a href=\"Bajo.html#pluginPkgs\">pluginPkgs</a>","description":"<p>List of all loaded plugin's package names</p>"},{"title":"Bajo#readConfig","link":"<a href=\"Bajo.html#readConfig\">readConfig</a>","description":"<p>Read and parse file as config object. Supported types: <code>.js</code> and <code>.json</code>.\nMore supports can be added using plugin. {@link https://github.com/ardhi/bajo-config|bajo-config} gives you additional supports for <code>.yml</code>, <code>.yaml</code> and <code>.toml</code> file</p>\n<p>If file extension is <code>.*</code>, it will be auto detected and parsed accordingly</p>"},{"title":"Bajo#readJson","link":"<a href=\"Bajo.html#readJson\">readJson</a>","description":"<p>Read and parse json file</p>"},{"title":"Bajo#resolvePath","link":"<a href=\"Bajo.html#resolvePath\">resolvePath</a>","description":"<p>Resolve file name to filesystem's path. Windows path separator <code>\\</code>\nis normalized to Unix's <code>/</code></p>"},{"title":"Bajo#runAt","link":"<a href=\"Bajo.html#runAt\">runAt</a>","description":"<p>Date/time when your app start</p>"},{"title":"Bajo#runHook","link":"<a href=\"Bajo.html#runHook\">runHook</a>","description":"<p>Run named hook</p>"},{"title":"Bajo#saveAsDownload","link":"<a href=\"Bajo.html#saveAsDownload\">saveAsDownload</a>","description":"<p>Save item as file in Bajo's download directory. That is a directory inside your\nBajo plugin's data directory.</p>\n<p>If file exists already, file will automatically be\nrenamed incrementally.</p>"},{"title":"Bajo.mainNs","link":"<a href=\"Bajo.html#.mainNs\">mainNs</a>","description":"<p>Your main namespace. And yes, you suppose to NOT CHANGE this</p>"},{"title":"BasePlugin","link":"<a href=\"BasePlugin.html\">BasePlugin</a>"},{"title":"BasePlugin#alias","link":"<a href=\"BasePlugin.html#alias\">alias</a>","description":"<p>Getter for plugin's alias</p>"},{"title":"BasePlugin#app","link":"<a href=\"BasePlugin.html#app\">app</a>","description":"<p>Reference to app instance</p>"},{"title":"BasePlugin#config","link":"<a href=\"BasePlugin.html#config\">config</a>","description":"<p>Config object</p>"},{"title":"BasePlugin#error","link":"<a href=\"BasePlugin.html#error\">error</a>","description":"<p>Create an instance of {@link Err} object</p>"},{"title":"BasePlugin#fatal","link":"<a href=\"BasePlugin.html#fatal\">fatal</a>","description":"<p>Create an instance of Err object, display it on screen and then force\nterminate the app process</p>"},{"title":"BasePlugin#getConfig","link":"<a href=\"BasePlugin.html#getConfig\">getConfig</a>","description":"<p>Get plugin's config value</p>"},{"title":"BasePlugin#initLog","link":"<a href=\"BasePlugin.html#initLog\">initLog</a>","description":"<p>Initialize log. Please refer to {@link Log} class for more info</p>"},{"title":"BasePlugin#initPrint","link":"<a href=\"BasePlugin.html#initPrint\">initPrint</a>","description":"<p>Initialize print engine. Please refer to {@link Print} class for more info</p>"},{"title":"BasePlugin#lib","link":"<a href=\"BasePlugin.html#lib\">lib</a>","description":"<p>Property to give you direct access to the most commonly used 3rd party library in a bajo based app.\nNo manual import necessary, always available, everywhere, anytime!</p>\n<p>Example:</p>\n<pre class=\"prettyprint source lang-javascript\"><code>const { camelCase, kebabCase } = this.lib._\nconsole.log(camelCase('Elit commodo sit et aliqua'))\n</code></pre>"},{"title":"BasePlugin#name","link":"<a href=\"BasePlugin.html#name\">name</a>","description":"<p>Getter for plugin's name</p>"},{"title":"BasePlugin#pkgName","link":"<a href=\"BasePlugin.html#pkgName\">pkgName</a>","description":"<p>Getter for plugin's package name</p>"},{"title":"BasePlugin.TLib","link":"<a href=\"BasePlugin.html#.TLib\">TLib</a>"},{"title":"BasePlugin.alias","link":"<a href=\"BasePlugin.html#.alias\">alias</a>","description":"<p>Plugin alias. Derived plugin must provide its own, unique alias. If it left blank,\nBajo will provide this automatically</p>"},{"title":"BasePlugin.pkgName","link":"<a href=\"BasePlugin.html#.pkgName\">pkgName</a>","description":"<p>Package name, the one from package.json</p>"},{"title":"BasePlugin.pluginName","link":"<a href=\"BasePlugin.html#.pluginName\">pluginName</a>","description":"<p>Plugin name. Simply the camel cased version of plugin's package name</p>"},{"title":"Err","link":"<a href=\"Err.html\">Err</a>"},{"title":"Err#fatal","link":"<a href=\"Err.html#fatal\">fatal</a>","description":"<p>Print error object on screen and terminate app process</p>"},{"title":"Err#formatErrorDetails","link":"<a href=\"Err.html#formatErrorDetails\">formatErrorDetails</a>","description":"<p>Pretty format error details</p>"},{"title":"Err#write","link":"<a href=\"Err.html#write\">write</a>","description":"<p>Create the error object</p>"},{"title":"Log","link":"<a href=\"Log.html\">Log</a>"},{"title":"Log#child","link":"<a href=\"Log.html#child\">child</a>","description":"<p>Create child logger</p>"},{"title":"Log#debug","link":"<a href=\"Log.html#debug\">debug</a>","description":"<p>Display &amp; format message as <code>debug</code> level. See {@link Log#formatMsg|formatMsg} for details</p>"},{"title":"Log#error","link":"<a href=\"Log.html#error\">error</a>","description":"<p>Display &amp; format message as <code>error</code> level. See {@link Log#formatMsg|formatMsg} for details</p>"},{"title":"Log#fatal","link":"<a href=\"Log.html#fatal\">fatal</a>","description":"<p>Display &amp; format message as <code>fatal</code> level. See {@link Log#formatMsg|formatMsg} for details</p>"},{"title":"Log#formatMsg","link":"<a href=\"Log.html#formatMsg\">formatMsg</a>","description":"<p>Display &amp; format message according to one of these rules:</p>\n<ol>\n<li><code>level</code> <code>text</code> <code>var 1</code> <code>var 2</code> <code>...var n</code> - Translate <code>text</code> and interpolate with <code>vars</code> for level <code>level</code></li>\n<li><code>level</code> <code>data</code> <code>text</code> <code>var 1</code> <code>var 2</code> <code>...var n</code> - As above, and append stringified <code>data</code></li>\n<li><code>level</code> <code>error</code> - Format as <strong>error</strong>. If current log level is <em>trace</em>, dump the error object on screen</li>\n</ol>"},{"title":"Log#info","link":"<a href=\"Log.html#info\">info</a>","description":"<p>Display &amp; format message as <code>info</code> level. See {@link Log#formatMsg|formatMsg} for details</p>"},{"title":"Log#init","link":"<a href=\"Log.html#init\">init</a>","description":"<p>Initialize logger. Auto detect to use different logger via Bajo's config file</p>"},{"title":"Log#isExtLogger","link":"<a href=\"Log.html#isExtLogger\">isExtLogger</a>","description":"<p>Do we use external logger or Bajo's built-in one?</p>"},{"title":"Log#isIgnored","link":"<a href=\"Log.html#isIgnored\">isIgnored</a>","description":"<p>Is provided level being ignored by config?</p>"},{"title":"Log#trace","link":"<a href=\"Log.html#trace\">trace</a>","description":"<p>Display &amp; format message as <code>trace</code> level. See {@link Log#formatMsg|formatMsg} for details</p>"},{"title":"Log#warn","link":"<a href=\"Log.html#warn\">warn</a>","description":"<p>Display &amp; format message as <code>warn</code> level. See {@link Log#formatMsg|formatMsg} for details</p>"},{"title":"Log#write","link":"<a href=\"Log.html#write\">write</a>","description":"<p>Interpolate and translate text via plugin's print engine. Check Print class\nfor more information</p>"},{"title":"Plugin","link":"<a href=\"Plugin.html\">Plugin</a>"},{"title":"Plugin#exit","link":"<a href=\"Plugin.html#exit\">exit</a>","description":"<p>Upon app termination, this method will be called first. Mostly useful for system cleanup,\ndelete temporary files, freeing resources etc.</p>"},{"title":"Plugin#init","link":"<a href=\"Plugin.html#init\">init</a>","description":"<p>After config is read, plugin will be initialized. You can still change your config here,\nbecause after plugin is initialized, config will be deep frozen.</p>"},{"title":"Plugin#loadConfig","link":"<a href=\"Plugin.html#loadConfig\">loadConfig</a>","description":"<p>Load config from file in data directory, program arguments and environment variables. Level of importance:\n<code>Env Variables &gt; Program Arguments &gt; Config File</code></p>"},{"title":"Plugin#start","link":"<a href=\"Plugin.html#start\">start</a>","description":"<p>This method will be called after plugin's init</p>"},{"title":"Plugin.dependencies","link":"<a href=\"Plugin.html#.dependencies\">dependencies</a>","description":"<p>Dependencies to other plugins. Enter all plugin's package name your plugin dependent from.</p>\n<p>Semver is also supported.</p>"},{"title":"Print","link":"<a href=\"Print.html\">Print</a>","description":"<p>Class constructor</p>"},{"title":"Print#clear","link":"<a href=\"Print.html#clear\">clear</a>","description":"<p>Clear spinner text</p>"},{"title":"Print#fail","link":"<a href=\"Print.html#fail\">fail</a>","description":"<p>Print failed message, prefixed with a cross icon</p>"},{"title":"Print#fatal","link":"<a href=\"Print.html#fatal\">fatal</a>","description":"<p>Print failed message, prefixed with a cross icon and terminate the app process</p>"},{"title":"Print#getElapsed","link":"<a href=\"Print.html#getElapsed\">getElapsed</a>","description":"<p>Get elapsed time since print instance is created</p>"},{"title":"Print#info","link":"<a href=\"Print.html#info\">info</a>","description":"<p>Print failed message, prefixed with an info icon</p>"},{"title":"Print#init","link":"<a href=\"Print.html#init\">init</a>","description":"<p>Initialize print engine and read plugin's translation files</p>"},{"title":"Print#render","link":"<a href=\"Print.html#render\">render</a>","description":"<p>Force render spinner</p>"},{"title":"Print#setOpts","link":"<a href=\"Print.html#setOpts\">setOpts</a>","description":"<p>Set spinner options</p>"},{"title":"Print#setText","link":"<a href=\"Print.html#setText\">setText</a>","description":"<p>Set spinner text</p>"},{"title":"Print#spinner","link":"<a href=\"Print.html#spinner\">spinner</a>","description":"<p>Create a new spinner</p>"},{"title":"Print#start","link":"<a href=\"Print.html#start\">start</a>","description":"<p>Start the spinner</p>"},{"title":"Print#stop","link":"<a href=\"Print.html#stop\">stop</a>","description":"<p>Stop the spinner</p>"},{"title":"Print#succeed","link":"<a href=\"Print.html#succeed\">succeed</a>","description":"<p>Print success message, prefixed with a check icon</p>"},{"title":"Print#warn","link":"<a href=\"Print.html#warn\">warn</a>","description":"<p>Print warning message, prefixed with a warn icon</p>"},{"title":"Print#write","link":"<a href=\"Print.html#write\">write</a>","description":"<p>Interpolate and translate text according to the chosen language</p>"},{"title":"TData","link":"<a href=\"global.html#TData\">TData</a>","description":"<p>Supported data types</p>"},{"title":"TFormat","link":"<a href=\"global.html#TFormat\">TFormat</a>","description":"<p>General format types</p>"},{"title":"TLogLevels","link":"<a href=\"global.html#TLogLevels\">TLogLevels</a>"},{"title":"TNsPath","link":"<a href=\"global.html#TNsPath\">TNsPath</a>","description":"<p>Object returned by {@link Bajo#breakNsPath|bajo:breakNsPath}</p>"},{"title":"TObjectFormat","link":"<a href=\"global.html#TObjectFormat\">TObjectFormat</a>","description":"<p>Object returned by {@link Bajo#getUnitFormat|bajo:getUnitFormat}</p>"},{"title":"module:class/helper/bajo","link":"<a href=\"module-class_helper_bajo.html\">class/helper/bajo</a>"},{"title":"module:class/helper/bajo.bootOrder","link":"<a href=\"module-class_helper_bajo.html#.bootOrder\">bootOrder</a>","description":"<p>Setup plugins boot orders by reading plugin's <code>.bootorder</code> file if provided.</p>"},{"title":"module:class/helper/bajo.bootPlugins","link":"<a href=\"module-class_helper_bajo.html#.bootPlugins\">bootPlugins</a>","description":"<p>Iterate through all plugins loaded and do:</p>\n<ol>\n<li>{@link module:class/helper/bajo-plugin.buildConfigs|build configs}</li>\n<li>{@link module:class/helper/bajo-plugin.checkNameAliases|ensure names &amp; aliases uniqueness}</li>\n<li>{@link module:class/helper/bajo-plugin.checkDependencies|ensure dependencies are met}</li>\n<li>{@link module:class/helper/bajo-plugin.attachMethods|build and attach dynamic methods}</li>\n<li>{@link module:class/helper/bajo-plugin.collectHooks|collect hooks}</li>\n<li>{@link module:class/helper/bajo-plugin.run|run plugins}</li>\n</ol>"},{"title":"module:class/helper/bajo.buildBaseConfig","link":"<a href=\"module-class_helper_bajo.html#.buildBaseConfig\">buildBaseConfig</a>","description":"<p>Building bajo base config. Mostly dealing with directory setups:</p>\n<ul>\n<li>determine base directory</li>\n<li>check whether data directory is valid</li>\n<li>ensure data config directory is there</li>\n</ul>"},{"title":"module:class/helper/bajo.buildExtConfig","link":"<a href=\"module-class_helper_bajo.html#.buildExtConfig\">buildExtConfig</a>","description":"<p>Bajo extra config:</p>\n<ul>\n<li>reading config file</li>\n<li>merge config with arguments &amp; environments values</li>\n<li>Set environment (<code>dev</code> or <code>prod</code>)</li>\n</ul>"},{"title":"module:class/helper/bajo.buildPlugins","link":"<a href=\"module-class_helper_bajo.html#.buildPlugins\">buildPlugins</a>","description":"<p>Building all plugins:</p>\n<ul>\n<li>read the list of plugins from <code>.plugins</code> file</li>\n<li>iterate through the list and build related plugins</li>\n<li>attach these plugins to the app instance</li>\n</ul>"},{"title":"module:class/helper/bajo.collectConfigHandlers","link":"<a href=\"module-class_helper_bajo.html#.collectConfigHandlers\">collectConfigHandlers</a>","description":"<p>Collect all config handlers, including the one provided by plugins</p>"},{"title":"module:class/helper/bajo.exitHandler","link":"<a href=\"module-class_helper_bajo.html#.exitHandler\">exitHandler</a>","description":"<p>Attach plugins exit handlers and make sure the app shutdowns gracefully</p>"},{"title":"module:class/helper/bajo.runAsApplet","link":"<a href=\"module-class_helper_bajo.html#.runAsApplet\">runAsApplet</a>","description":"<p>If app is in <code>applet</code> mode, this little helper should take care plugin's applet boot process</p>"},{"title":"module:class/helper/plugin","link":"<a href=\"module-class_helper_plugin.html\">class/helper/plugin</a>"},{"title":"module:class/helper/plugin.attachMethods","link":"<a href=\"module-class_helper_plugin.html#.attachMethods\">attachMethods</a>","description":"<p>Scan plugins <code>method</code> directories, and turn + attach its found files as methods dynamically.</p>"},{"title":"module:class/helper/plugin.buildConfigs","link":"<a href=\"module-class_helper_plugin.html#.buildConfigs\">buildConfigs</a>","description":"<p>Build configurations</p>"},{"title":"module:class/helper/plugin.checkDependencies","link":"<a href=\"module-class_helper_plugin.html#.checkDependencies\">checkDependencies</a>","description":"<p>Ensure dependencies are met</p>"},{"title":"module:class/helper/plugin.checkNameAliases","link":"<a href=\"module-class_helper_plugin.html#.checkNameAliases\">checkNameAliases</a>","description":"<p>Ensure for names and aliases to be unique and no clashes with other plugins</p>"},{"title":"module:class/helper/plugin.collectHooks","link":"<a href=\"module-class_helper_plugin.html#.collectHooks\">collectHooks</a>","description":"<p>Collect and build hooks and push them to the bajo's hook system</p>"},{"title":"module:class/helper/plugin.run","link":"<a href=\"module-class_helper_plugin.html#.run\">run</a>","description":"<p>Finally, run all plugins</p>"},{"title":"module:lib/create-method","link":"<a href=\"module-lib_create-method.html\">lib/create-method</a>"},{"title":"module:lib/create-method~createMethod","link":"<a href=\"module-lib_create-method.html#~createMethod\">createMethod</a>","description":"<p>This function scan directory for <code>.js</code> and <code>.json</code> files, read its content, and\nturn it to become a class method by attach it to its scope (its class instance) dynamically.</p>\n<p>File path is camel-cased and become the method name. File that starts with underscore (eg: <code>_my-file.js</code>)\nis ignored; usefull to use such file as your shared library.</p>"},{"title":"module:lib/resolve-path","link":"<a href=\"module-lib_resolve-path.html\">lib/resolve-path</a>"},{"title":"module:lib/resolve-path~resolvePath","link":"<a href=\"module-lib_resolve-path.html#~resolvePath\">resolvePath</a>","description":"<p>Resolve file name to filesystem's path. Windows path separator <code>\\</code>\nis normalized to Unix's <code>/</code></p>"},{"title":"module:lib/shim","link":"<a href=\"module-lib_shim.html\">lib/shim</a>"},{"title":"module:lib/shim~shim","link":"<a href=\"module-lib_shim.html#~shim\">shim</a>","description":"<p>Function to attach some of the methods needed but probably not provided by your node installation:</p>\n<ul>\n<li><code>String.prototype.replaceAll</code></li>\n<li><code>String.prototype.splice</code></li>\n</ul>"}]}